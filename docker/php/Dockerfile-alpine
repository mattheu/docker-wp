FROM php:7-fpm-alpine

RUN apk update && apk upgrade;

# Install some general stuff.
RUN apk add --no-cache sudo curl wget bash sed less ncurses git subversion zip unzip tar gcc autoconf grep nano;

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php \
	&& mv composer.phar /usr/local/bin/composer;

# Install PHP extensions we need.
# gd, mysqli opcache.
# Taken from the WP docker image.
RUN set -ex; \
	apk add --no-cache --virtual .build-deps libjpeg-turbo-dev libpng-dev; \
	docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \
	docker-php-ext-install gd mysqli opcache; \
	runDeps="$( \
		scanelf --needed --nobanner --recursive \
			/usr/local/lib/php/extensions \
			| awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
			| sort -u \
			| xargs -r apk info --installed \
			| sort -u \
	)"; \
	apk add --virtual .wordpress-phpexts-rundeps $runDeps; \
	apk del .build-deps;

# PHPUnit
RUN wget https://phar.phpunit.de/phpunit.phar && \
	chmod +x phpunit.phar && \
	sudo mv phpunit.phar /usr/local/bin/phpunit;

# Install Memcached
RUN set -xe \
	&& apk add --no-cache libmemcached-dev zlib-dev cyrus-sasl-dev \
	&& docker-php-source extract \
	&& git clone --branch php7 https://github.com/php-memcached-dev/php-memcached.git /usr/src/php/ext/memcached/ \
	&& docker-php-ext-configure memcached \
	&& docker-php-ext-install memcached \
	&& docker-php-source delete \
	&& apk del --no-cache zlib-dev cyrus-sasl-dev \
	&& rm -rf /tmp/* /var/cache/apk/*

# Install WP-CLI
RUN curl -o /bin/wp-cli.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
COPY wp-su.sh /bin/wp
RUN chmod +x /bin/wp-cli.phar /bin/wp

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer;

# Gmagick.
RUN echo 'http://dl-4.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories && \
	echo 'http://dl-4.alpinelinux.org/alpine/edge/community' >> /etc/apk/repositories && \
	apk add --no-cache openssl libc-dev python-dev gcc make libtool libjpeg libpng libwebp && \
	apk add --no-cache imagemagick-dev graphicsmagick-dev && \
	printf "\n" | pecl install gmagick-2.0.4RC1;

# XDebug
RUN pecl install xdebug-2.6.0 \
	&& docker-php-ext-enable xdebug;
